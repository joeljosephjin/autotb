cross_validation: False
Preprocessing...
Preparing input...
Input was already prepared
Use `python3 -m tensorboard.main --logdir=./logs/` to visualize accuracy and AUC graphs in real time
Training...
Loaded the numpy file dataset...
Diversity of Training Set: Class 0: 775 Class 1: 226
Diversity of Validation Set: Class 0: 176 Class 1: 75
tcmalloc: large alloc 1587388416 bytes == 0x55ca76160000 @  0x7f4d7cf731e7 0x7f4d7ab3346e 0x7f4d7ab83c7b 0x7f4d7ab83d97 0x7f4d7ab83fe9 0x7f4d7ab86d7d 0x7f4d7ab8707b 0x7f4d7ac28761 0x55ca6db7f544 0x55ca6db7f240 0x55ca6dbf3627 0x55ca6dbed9ee 0x55ca6dabfeb0 0x7f4d7ab70ef7 0x55ca6db7f437 0x55ca6db7f240 0x55ca6dbf2973 0x55ca6dbed9ee 0x55ca6db80bda 0x55ca6dbf2d00 0x55ca6db80afa 0x55ca6dbee915 0x55ca6dbed9ee 0x55ca6db80bda 0x55ca6dbee915 0x55ca6dbed9ee 0x55ca6db80bda 0x55ca6dbef737 0x55ca6dbed9ee 0x55ca6dbed6f3 0x55ca6dcb74c2
WARNING:tensorflow:From /content/tbcnn/net.py:17: The name tf.keras.initializers.he_normal is deprecated. Please use tf.compat.v1.keras.initializers.he_normal instead.
/content/tbcnn/net.py:21: UserWarning: `tf.layers.batch_normalization` is deprecated and will be removed in a future version. Please use `tf.keras.layers.BatchNormalization` instead. In particular, `tf.control_dependencies(tf.GraphKeys.UPDATE_OPS)` should not be used (consult the `tf.keras.layers.BatchNormalization` documentation).
  output = tf.layers.batch_normalization(output)
/usr/local/lib/python3.7/dist-packages/keras/legacy_tf_layers/normalization.py:455: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  return layer.apply(inputs, training=training)
/content/tbcnn/net.py:35: UserWarning: `tf.layers.batch_normalization` is deprecated and will be removed in a future version. Please use `tf.keras.layers.BatchNormalization` instead. In particular, `tf.control_dependencies(tf.GraphKeys.UPDATE_OPS)` should not be used (consult the `tf.keras.layers.BatchNormalization` documentation).
  parallel = tf.layers.batch_normalization(parallel)
Parameter number: 231602
WARNING:tensorflow:From /content/tbcnn/net.py:98: auc (from tensorflow.python.ops.metrics_impl) is deprecated and will be removed in a future version.
Instructions for updating:
The value of AUC returned by this may race with the update so this is deprecated. Please use tf.keras.metrics.AUC instead.
WARNING:tensorflow:From /content/tbcnn/train_loop.py:46: shuffle_and_repeat (from tensorflow.python.data.experimental.ops.shuffle_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.shuffle(buffer_size, seed)` followed by `tf.data.Dataset.repeat(count)`. Static tf.data optimizations will take care of using the fused implementation.
WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/autograph/impl/api.py:465: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.
Instructions for updating:
tf.py_func is deprecated in TF V2. Instead, there are two
    options available in V2.
    - tf.py_function takes a python function which manipulates tf eager
    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to
    an ndarray (just call tensor.numpy()) but having access to eager tensors
    means `tf.py_function`s can use accelerators such as GPUs as well as
    being differentiable using a gradient tape.
    - tf.numpy_function maintains the semantics of the deprecated tf.py_func
    (it is not differentiable, and manipulates numpy arrays). It drops the
    stateful argument making all functions stateful.
Traceback (most recent call last):
  File "train.py", line 52, in <module>
    train_variants.train_single(relPath('input'), epochs=epochs, size=SIZE)
  File "/content/tbcnn/train_variants.py", line 108, in train_single
    train_loop.train_net(training, test, size=size, epochs=epochs)
  File "/content/tbcnn/train_loop.py", line 112, in train_net
    next_training = create_dataloader(training_images_i, training_labels_i, size)
  File "/content/tbcnn/train_loop.py", line 48, in create_dataloader
    training_set = training_set.batch(batch_size)
NameError: name 'batch_size' is not defined