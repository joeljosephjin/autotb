cross_validation: False
Preprocessing...
Preparing input...
Input was already prepared
Use `python3 -m tensorboard.main --logdir=./logs/` to visualize accuracy and AUC graphs in real time
Training...
Loaded the numpy file dataset...
tcmalloc: large alloc 1587388416 bytes == 0x557fd6d30000 @  0x7f859006f1e7 0x7f858dc2f46e 0x7f858dc7fc7b 0x7f858dc7fd97 0x7f858dc7ffe9 0x7f858dc82d7d 0x7f858dc8307b 0x7f858dd24761 0x557fcf8e8544 0x557fcf8e8240 0x557fcf95c627 0x557fcf9569ee 0x557fcf828eb0 0x7f858dc6cef7 0x557fcf8e8437 0x557fcf8e8240 0x557fcf95b973 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf95bd00 0x557fcf8e9afa 0x557fcf957915 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf957915 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf958737 0x557fcf9569ee 0x557fcf9566f3 0x557fcfa204c2
Diversity of Training Set: Class 0: 757 Class 1: 244
Diversity of Validation Set: Class 0: 194 Class 1: 57
Loading the Training Dataset...
tcmalloc: large alloc 1269145600 bytes == 0x55803570a000 @  0x7f859006f1e7 0x7f858dc2f46e 0x7f858dc7fc7b 0x7f858dc7fd97 0x7f858dd18887 0x557fcf8e84b0 0x557fcf9d9e1d 0x557fcf95be99 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf958737 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf958737 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf958737 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf958737 0x557fcf9569ee 0x557fcf828e2b 0x557fcf958fe4 0x557fcf956ced 0x557fcf8e9bda 0x557fcf958737 0x557fcf9569ee 0x557fcf8e9bda 0x557fcf95bd00 0x557fcf956ced 0x557fcf8ea48c
WARNING:tensorflow:From /content/tbcnn/train_loop.py:65: shuffle_and_repeat (from tensorflow.python.data.experimental.ops.shuffle_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.shuffle(buffer_size, seed)` followed by `tf.data.Dataset.repeat(count)`. Static tf.data optimizations will take care of using the fused implementation.
WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/autograph/impl/api.py:465: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.
Instructions for updating:
tf.py_func is deprecated in TF V2. Instead, there are two
    options available in V2.
    - tf.py_function takes a python function which manipulates tf eager
    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to
    an ndarray (just call tensor.numpy()) but having access to eager tensors
    means `tf.py_function`s can use accelerators such as GPUs as well as
    being differentiable using a gradient tape.
    - tf.numpy_function maintains the semantics of the deprecated tf.py_func
    (it is not differentiable, and manipulates numpy arrays). It drops the
    stateful argument making all functions stateful.
WARNING:tensorflow:From /content/tbcnn/train_loop.py:73: DatasetV1.make_one_shot_iterator (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.
Instructions for updating:
This is a deprecated API that should only be used in TF 1 graph mode and legacy TF 2 graph mode available through `tf.compat.v1`. In all other situations -- namely, eager mode and inside `tf.function` -- you can consume dataset elements using `for elem in dataset: ...` or by explicitly creating iterator via `iterator = iter(dataset)` and fetching its elements via `values = next(iterator)`. Furthermore, this API is not available in TF 2. During the transition from TF 1 to TF 2 you can use `tf.compat.v1.data.make_one_shot_iterator(dataset)` to create a TF 1 graph mode style iterator for a dataset created through TF 2 APIs. Note that this should be a transient state of your code base as there are in general no guarantees about the interoperability of TF 1 and TF 2 code.
