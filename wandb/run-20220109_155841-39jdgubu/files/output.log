cross_validation: False
Preprocessing...
Preparing input...

 38% 471/1256 [00:03<00:05, 137.15it/s]
Error at Image: MCUCXR_000243_0.png unpack_from requires a buffer of at least 4 bytes

 63% 790/1256 [00:05<00:02, 165.70it/s]
Error at Image: MCUCXR_000384_0.png Exception thrown in SimpleITK ImageFileReader_Execute: /tmp/SimpleITK/Code/IO/src/sitkImageReaderBase.cxx:105:
sitk::ERROR: Unable to determine ImageIO reader for "/content/tbcnn/preprocessed/MCUCXR_000384_0.png"
Error at Image: MCUCXR_100237_1.png Exception thrown in SimpleITK ImageFileReader_Execute: /tmp/SimpleITK/Code/IO/src/sitkImageReaderBase.cxx:105:

100% 1256/1256 [00:08<00:00, 150.55it/s]
tcmalloc: large alloc 1587388416 bytes == 0x55d6c3470000 @  0x7fa0bfd291e7 0x7fa0bd8e946e 0x7fa0bd939c7b 0x7fa0bd939d18 0x7fa0bd9e1010 0x7fa0bd9e173c 0x7fa0bd9e185d 0x55d65bff2749 0x7fa0bd926ef7 0x55d65bff0437 0x55d65bff0240 0x55d65c063973 0x55d65c05e9ee 0x55d65bff1bda 0x55d65c060737 0x55d65c05eced 0x55d65bf30eb0 0x7fa0bd926ef7 0x55d65bff0437 0x55d65bff0240 0x55d65c063973 0x55d65c05e9ee 0x55d65bff1bda 0x55d65c063d00 0x55d65bff1afa 0x55d65c063d00 0x55d65c05e9ee 0x55d65c05e6f3 0x55d65c1284c2 0x55d65c12883d 0x55d65c1286e6
tcmalloc: large alloc 1587388416 bytes == 0x55d721e4a000 @  0x7fa0bfd291e7 0x7fa0bd8e946e 0x7fa0bd939c7b 0x7fa0bd939d18 0x7fa0bd9f5d79 0x7fa0bd9f8e4c 0x7fa0bdb17e7f 0x7fa0bdb1dfb5 0x7fa0bdb1fe3d 0x7fa0bdb21516 0x55d65bff1720 0x55d65bff12f9 0x7fa0bda000db 0x55d65c0da0b2 0x55d65c06062d 0x55d65c05e9ee 0x55d65bff1bda 0x55d65c060737 0x55d65c05e9ee 0x55d65bf30e2b 0x55d65c060fe4 0x55d65c05e9ee 0x55d65bf30eb0 0x7fa0bd926ef7 0x55d65bff0437 0x55d65bff0240 0x55d65c063973 0x55d65c05e9ee 0x55d65bff1bda 0x55d65c063d00 0x55d65bff1afa
Use `python3 -m tensorboard.main --logdir=./logs/` to visualize accuracy and AUC graphs in real time
Training...
Diversity of Training Set: Class 0: 753 Class 1: 248
Diversity of Validation Set: Class 0: 198 Class 1: 53
tcmalloc: large alloc 1587388416 bytes == 0x55d66822a000 @  0x7fa0bfd291e7 0x7fa0bd8e946e 0x7fa0bd939c7b 0x7fa0bd939d97 0x7fa0bd939fe9 0x7fa0bd93cd7d 0x7fa0bd93d07b 0x7fa0bd9de761 0x55d65bff0544 0x55d65bff0240 0x55d65c064627 0x55d65c05e9ee 0x55d65bf30eb0 0x7fa0bd926ef7 0x55d65bff0437 0x55d65bff0240 0x55d65c063973 0x55d65c05e9ee 0x55d65bff1bda 0x55d65c063d00 0x55d65bff1afa 0x55d65c05f915 0x55d65c05e9ee 0x55d65bff1bda 0x55d65c05f915 0x55d65c05e9ee 0x55d65bff1bda 0x55d65c060737 0x55d65c05e9ee 0x55d65c05e6f3 0x55d65c1284c2
WARNING:tensorflow:From /content/tbcnn/train_loop.py:63: shuffle_and_repeat (from tensorflow.python.data.experimental.ops.shuffle_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.shuffle(buffer_size, seed)` followed by `tf.data.Dataset.repeat(count)`. Static tf.data optimizations will take care of using the fused implementation.
WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/autograph/impl/api.py:465: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.
Instructions for updating:
tf.py_func is deprecated in TF V2. Instead, there are two
    options available in V2.
    - tf.py_function takes a python function which manipulates tf eager
    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to
    an ndarray (just call tensor.numpy()) but having access to eager tensors
    means `tf.py_function`s can use accelerators such as GPUs as well as
    being differentiable using a gradient tape.
    - tf.numpy_function maintains the semantics of the deprecated tf.py_func
    (it is not differentiable, and manipulates numpy arrays). It drops the
    stateful argument making all functions stateful.
WARNING:tensorflow:From /content/tbcnn/train_loop.py:69: DatasetV1.make_one_shot_iterator (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.
Instructions for updating:
