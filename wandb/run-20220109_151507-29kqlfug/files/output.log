cross_validation: True
Preprocessing...
Preparing input...
Input was already prepared
Use `python3 -m tensorboard.main --logdir=./logs/` to visualize accuracy and AUC graphs in real time
Starting 3-fold cross validation study...
Set 1
Diversity of Training Set: Class 0: 111 Class 1: 22
Diversity of Validation Set: Class 0: 57 Class 1: 10
WARNING:tensorflow:From /content/tbcnn/train_loop.py:63: shuffle_and_repeat (from tensorflow.python.data.experimental.ops.shuffle_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.shuffle(buffer_size, seed)` followed by `tf.data.Dataset.repeat(count)`. Static tf.data optimizations will take care of using the fused implementation.
WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/autograph/impl/api.py:465: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.
Instructions for updating:
tf.py_func is deprecated in TF V2. Instead, there are two
    options available in V2.
    - tf.py_function takes a python function which manipulates tf eager
    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to
    an ndarray (just call tensor.numpy()) but having access to eager tensors
    means `tf.py_function`s can use accelerators such as GPUs as well as
    being differentiable using a gradient tape.
    - tf.numpy_function maintains the semantics of the deprecated tf.py_func
    (it is not differentiable, and manipulates numpy arrays). It drops the
    stateful argument making all functions stateful.
WARNING:tensorflow:From /content/tbcnn/train_loop.py:69: DatasetV1.make_one_shot_iterator (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.
Instructions for updating:
This is a deprecated API that should only be used in TF 1 graph mode and legacy TF 2 graph mode available through `tf.compat.v1`. In all other situations -- namely, eager mode and inside `tf.function` -- you can consume dataset elements using `for elem in dataset: ...` or by explicitly creating iterator via `iterator = iter(dataset)` and fetching its elements via `values = next(iterator)`. Furthermore, this API is not available in TF 2. During the transition from TF 1 to TF 2 you can use `tf.compat.v1.data.make_one_shot_iterator(dataset)` to create a TF 1 graph mode style iterator for a dataset created through TF 2 APIs. Note that this should be a transient state of your code base as there are in general no guarantees about the interoperability of TF 1 and TF 2 code.
WARNING:tensorflow:From /content/tbcnn/net.py:17: The name tf.keras.initializers.he_normal is deprecated. Please use tf.compat.v1.keras.initializers.he_normal instead.
/content/tbcnn/net.py:21: UserWarning: `tf.layers.batch_normalization` is deprecated and will be removed in a future version. Please use `tf.keras.layers.BatchNormalization` instead. In particular, `tf.control_dependencies(tf.GraphKeys.UPDATE_OPS)` should not be used (consult the `tf.keras.layers.BatchNormalization` documentation).
  output = tf.layers.batch_normalization(output)
/usr/local/lib/python3.7/dist-packages/keras/legacy_tf_layers/normalization.py:455: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  return layer.apply(inputs, training=training)
/content/tbcnn/net.py:35: UserWarning: `tf.layers.batch_normalization` is deprecated and will be removed in a future version. Please use `tf.keras.layers.BatchNormalization` instead. In particular, `tf.control_dependencies(tf.GraphKeys.UPDATE_OPS)` should not be used (consult the `tf.keras.layers.BatchNormalization` documentation).
  parallel = tf.layers.batch_normalization(parallel)
Parameter number: 231602
WARNING:tensorflow:From /content/tbcnn/net.py:98: auc (from tensorflow.python.ops.metrics_impl) is deprecated and will be removed in a future version.
Instructions for updating:
The value of AUC returned by this may race with the update so this is deprecated. Please use tf.keras.metrics.AUC instead.















Epoch   0 | Time:  36 s | Acc: 0.794 (Test: 0.851) | AUC: 0.529 (Test: 0.800)















Epoch   1 | Time:  30 s | Acc: 0.831 (Test: 0.851) | AUC: 0.668 (Test: 0.825)













Epoch   2 | Time:  30 s | Acc: 0.831 (Test: 0.851) | AUC: 0.641 (Test: 0.827)















Epoch   3 | Time:  31 s | Acc: 0.860 (Test: 0.851) | AUC: 0.579 (Test: 0.839)













Epoch   4 | Time:  30 s | Acc: 0.831 (Test: 0.851) | AUC: 0.683 (Test: 0.854)
Set 2
Diversity of Training Set: Class 0: 115 Class 1: 18
Diversity of Validation Set: Class 0: 53 Class 1: 14
Parameter number: 231602














Epoch   0 | Time:  33 s | Acc: 0.860 (Test: 0.791) | AUC: 0.578 (Test: 0.627)













Epoch   1 | Time:  28 s | Acc: 0.875 (Test: 0.791) | AUC: 0.580 (Test: 0.642)














Epoch   2 | Time:  29 s | Acc: 0.860 (Test: 0.791) | AUC: 0.644 (Test: 0.680)













Epoch   3 | Time:  29 s | Acc: 0.868 (Test: 0.791) | AUC: 0.678 (Test: 0.711)













Epoch   4 | Time:  29 s | Acc: 0.853 (Test: 0.791) | AUC: 0.668 (Test: 0.735)
Traceback (most recent call last):
  File "train.py", line 50, in <module>
    train_variants.train_cross_validation(relPath('input'), epochs=epochs, sets=sets, size=SIZE)
  File "/content/tbcnn/train_variants.py", line 141, in train_cross_validation
    epochs=epochs,
  File "/content/tbcnn/train_loop.py", line 156, in train_net
    .format(e, elapsed, accuracy, test_accuracy, auc, test_auc)
  File "/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py", line 1661, in __exit__
    self.close()
  File "/usr/local/lib/python3.7/dist-packages/tensorflow/python/client/session.py", line 768, in close
    tf_session.TF_CloseSession(self._session)
KeyboardInterrupt