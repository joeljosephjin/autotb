cross_validation: False
Preprocessing...
Preparing input...
Input was already prepared
Use `python3 -m tensorboard.main --logdir=./logs/` to visualize accuracy and AUC graphs in real time
Training...
Loaded the numpy file dataset...
Diversity of Training Set: Class 0: 759 Class 1: 242
Diversity of Validation Set: Class 0: 192 Class 1: 59
Parameter number: 231602
Loading data set 0...
tcmalloc: large alloc 1587388416 bytes == 0x563ccd5ca000 @  0x7f6b136881e7 0x7f6b1124846e 0x7f6b11298c7b 0x7f6b11298d97 0x7f6b11298fe9 0x7f6b1129bd7d 0x7f6b1129c07b 0x7f6b1133d761 0x563cc5ac6544 0x563cc5ac6240 0x563cc5b3a627 0x563cc5b349ee 0x563cc5a06eb0 0x7f6b11285ef7 0x563cc5ac6437 0x563cc5ac6240 0x563cc5b39973 0x563cc5b349ee 0x563cc5ac7bda 0x563cc5b39d00 0x563cc5ac7afa 0x563cc5b35915 0x563cc5b349ee 0x563cc5ac7bda 0x563cc5b35915 0x563cc5b349ee 0x563cc5ac7bda 0x563cc5b36737 0x563cc5b349ee 0x563cc5b346f3 0x563cc5bfe4c2
WARNING:tensorflow:From /content/tbcnn/net.py:17: The name tf.keras.initializers.he_normal is deprecated. Please use tf.compat.v1.keras.initializers.he_normal instead.
/content/tbcnn/net.py:21: UserWarning: `tf.layers.batch_normalization` is deprecated and will be removed in a future version. Please use `tf.keras.layers.BatchNormalization` instead. In particular, `tf.control_dependencies(tf.GraphKeys.UPDATE_OPS)` should not be used (consult the `tf.keras.layers.BatchNormalization` documentation).
  output = tf.layers.batch_normalization(output)
/usr/local/lib/python3.7/dist-packages/keras/legacy_tf_layers/normalization.py:455: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.
  return layer.apply(inputs, training=training)
/content/tbcnn/net.py:35: UserWarning: `tf.layers.batch_normalization` is deprecated and will be removed in a future version. Please use `tf.keras.layers.BatchNormalization` instead. In particular, `tf.control_dependencies(tf.GraphKeys.UPDATE_OPS)` should not be used (consult the `tf.keras.layers.BatchNormalization` documentation).
  parallel = tf.layers.batch_normalization(parallel)
WARNING:tensorflow:From /content/tbcnn/net.py:98: auc (from tensorflow.python.ops.metrics_impl) is deprecated and will be removed in a future version.
Instructions for updating:
The value of AUC returned by this may race with the update so this is deprecated. Please use tf.keras.metrics.AUC instead.
WARNING:tensorflow:From /content/tbcnn/train_loop.py:46: shuffle_and_repeat (from tensorflow.python.data.experimental.ops.shuffle_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.shuffle(buffer_size, seed)` followed by `tf.data.Dataset.repeat(count)`. Static tf.data optimizations will take care of using the fused implementation.
WARNING:tensorflow:From /usr/local/lib/python3.7/dist-packages/tensorflow/python/autograph/impl/api.py:465: py_func (from tensorflow.python.ops.script_ops) is deprecated and will be removed in a future version.
Instructions for updating:
tf.py_func is deprecated in TF V2. Instead, there are two
    options available in V2.
    - tf.py_function takes a python function which manipulates tf eager
    tensors instead of numpy arrays. It's easy to convert a tf eager tensor to
    an ndarray (just call tensor.numpy()) but having access to eager tensors
    means `tf.py_function`s can use accelerators such as GPUs as well as
    being differentiable using a gradient tape.
    - tf.numpy_function maintains the semantics of the deprecated tf.py_func
    (it is not differentiable, and manipulates numpy arrays). It drops the
    stateful argument making all functions stateful.
Traceback (most recent call last):
  File "train.py", line 52, in <module>
    train_variants.train_single(relPath('input'), epochs=epochs, size=SIZE)
  File "/content/tbcnn/train_variants.py", line 108, in train_single
    train_loop.train_net(training, test, size=size, epochs=epochs)
  File "/content/tbcnn/train_loop.py", line 112, in train_net
    next_training = create_dataloader(training_images_i, training_labels_i, size, batch_size)
  File "/content/tbcnn/train_loop.py", line 53, in create_dataloader
    return training_set.make_one_shot_iterator().get_next()
UnboundLocalError: local variable 'training_set' referenced before assignment